{%- liquid
  assign show_in_product_grid = section.settings.show_in_product_grid
-%}

{%- capture section_settings -%}
  {
    "showInProductGrid": {{ show_in_product_grid | json }}
  }
{%- endcapture -%}

<div class="dbtfy-product-swatches" data-section-settings='{{ section_settings }}' hidden>
  {%- liquid
    for block in section.blocks
      if block.type == 'product'
        for i in (1..10)
          capture product_setting
            echo 'product_' | append: i
          endcapture

          capture option_name_setting
            echo 'option_name_' | append: i
          endcapture

          assign product = block.settings[product_setting]
          assign option_name = block.settings[option_name_setting]

          if product != blank
            if template contains 'customers/login' or template contains 'customers/activate_account' or template contains 'customers/reset_password'
              assign product_handle = product
              assign current_product = all_products[product_handle]
            else
              assign current_product = product
            endif

            assign list_products_and_groups = list_products_and_groups | append: ',' | append: current_product.handle
            assign current_option_title = blank

            if option_name != blank
              assign current_option_title = option_name
            else
              assign current_option_title = current_product.title
            endif

            assign list_products_option_title = list_products_option_title | append: ',' | append: current_option_title
          endif
        endfor
      endif

      if block.type == 'group'
        unless forloop.first or forloop.last
          assign list_products_and_groups = list_products_and_groups | append: '::'
          assign list_products_option_title = list_products_option_title | append: '::'
        endunless

        if block.settings.variant_name != blank
          assign list_groups = list_groups | append: ',' | append: block.settings.variant_name
        else
          assign list_groups = list_groups | append: ',' | append: '_blank'
        endif
      endif
    endfor

    assign groups_array = list_groups | remove_first: ',' | strip | split: ','
    assign separate_groups_with_products_array = list_products_and_groups | strip | split: '::'
    assign separate_groups_with_product_option_titles_array = list_products_option_title | strip | split: '::'
  -%}

  {%- for group in groups_array -%}
    {%- liquid
      assign array_of_products = separate_groups_with_products_array[forloop.index0] | remove_first: ',' | strip | split: ','
      assign array_of_options_titles = separate_groups_with_product_option_titles_array[forloop.index0] | remove_first: ',' | strip | split: ','
    -%}

    {%- if array_of_products.size >= 1 -%}
      <div class="dbtfy-product-swatches__group">
        {%- if group != '_blank' -%}
          <label class="mb-1">
            {{ group }}:
            <span class="dbtfy-product-swatches__label text-sub"></span>
          </label>
        {%- endif -%}

        <ul>
          {%- assign visible_product_handles = '' -%}

          {%- for product_handle in array_of_products -%}
            {%- liquid
              assign visible_product_handles_array = visible_product_handles | split: ','

              if visible_product_handles_array contains product_handle
                continue
              else
                assign visible_product_handles = visible_product_handles | append: product_handle | append: ','
              endif

              assign linked_product = blank

              for block in section.blocks
                if block.type == 'product'
                  for i in (1..10)
                    capture product_setting
                      echo 'product_' | append: i
                    endcapture

                    capture option_name_setting
                      echo 'option_name_' | append: i
                    endcapture

                    assign product = block.settings[product_setting]

                    if product != blank
                      assign block_product_handle = product

                      if block_product_handle == product_handle
                        if template contains 'customers/login' or template contains 'customers/activate_account' or template contains 'customers/reset_password'
                          assign linked_product = all_products[block_product_handle]
                        else
                          assign linked_product = product
                        endif
                      endif
                    endif
                  endfor
                endif
              endfor
            -%}

            <li data-product-id="{{ linked_product.id }}" data-product-option="{{ array_of_options_titles[forloop.index0] }}">
              <a href="{{ linked_product.url }}">
                {%- assign image = linked_product.media.first.preview_image -%}

                {%- if image != blank -%}
                  {%- capture sizes -%}50px{% endcapture %}

                  {{- image | image_url: width: 50 | image_tag: loading: 'lazy', sizes: sizes, widths: '100,200,300' -}}
                {%- else -%}
                  {{ 'product-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}
              </a>

              <div class="tooltip mb-3 text-center" data-w="{{ array_of_options_titles[forloop.index0] }}">{{ array_of_options_titles[forloop.index0] }}</div>
            </li>
          {%- endfor -%}
        </ul>
      </div>
    {%- endif -%}
  {%- endfor -%}
</div>

{% schema %}
{
  "name": "t:sections.addons.product_swatches.name",
  "settings": [
    {
      "type": "header",
      "content": "t:general.addons.help_center.header.content"
    },
    {
      "type": "paragraph",
      "content": "t:general.addons.help_center.product_swatches.content"
    },
    {
      "type": "paragraph",
      "content": "t:general.addons.help_center.enable_disable.content"
    },
    {
      "type": "header",
      "content": "t:general.addons.settings.header.content"
    },
    {
      "type": "checkbox",
      "id": "show_in_product_grid",
      "label": "t:sections.addons.product_swatches.settings.show_in_product_grid.label",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "group",
      "name": "t:sections.addons.product_swatches.blocks.group.name",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "t:general.sections.blocks.block_name.label",
          "info": "t:general.sections.blocks.block_name.info"
        },
        {
          "type": "text",
          "id": "name",
          "label": "t:sections.addons.product_swatches.blocks.group.settings.name.label"
        },
        {
          "type": "text",
          "id": "variant_name",
          "label": "t:sections.addons.product_swatches.blocks.group.settings.variant_name.label"
        }
      ]
    },
    {
      "type": "product",
      "name": "t:sections.addons.product_swatches.blocks.product.name",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "t:general.sections.blocks.block_name.label",
          "info": "t:general.sections.blocks.block_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__1.content"
        },
        {
          "type": "product",
          "id": "product_1",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_1",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__2.content"
        },
        {
          "type": "product",
          "id": "product_2",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_2",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__3.content"
        },
        {
          "type": "product",
          "id": "product_3",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_3",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__4.content"
        },
        {
          "type": "product",
          "id": "product_4",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_4",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__5.content"
        },
        {
          "type": "product",
          "id": "product_5",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_5",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__6.content"
        },
        {
          "type": "product",
          "id": "product_6",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_6",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__7.content"
        },
        {
          "type": "product",
          "id": "product_7",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_7",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__8.content"
        },
        {
          "type": "product",
          "id": "product_8",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_8",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__9.content"
        },
        {
          "type": "product",
          "id": "product_9",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_9",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        },
        {
          "type": "header",
          "content": "t:sections.addons.product_swatches.blocks.product.settings.header__10.content"
        },
        {
          "type": "product",
          "id": "product_10",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.product.label"
        },
        {
          "type": "text",
          "id": "option_name_10",
          "label": "t:sections.addons.product_swatches.blocks.product.settings.option_name.label",
          "info": "t:sections.addons.product_swatches.blocks.product.settings.option_name.info"
        }
      ]
    }
  ]
}
{% endschema %}
